# Auto-Battler Game

Un jeu de combat automatique (auto-battler) développé avec React, TypeScript et Node.js.

## 📁 Structure du Projet

```
auto-battler/
├── client/                 # Application React Frontend
│   ├── src/
│   │   ├── components/    # Composants React
│   │   │   ├── BattleField.tsx   # Zone de combat principale
│   │   │   ├── Commander.tsx     # Gestion des commandants
│   │   │   ├── Companion.tsx     # Affichage des compagnons
│   │   │   └── Formation.tsx     # Grille de formation
│   │   ├── types/        # Définitions TypeScript
│   │   │   └── game.ts   # Types du jeu
│   │   └── store/        # État global
│   │       └── gameStore.ts  # Logique du jeu avec Zustand
│   └── public/           # Fichiers statiques
│
└── server/               # Serveur Node.js
    ├── src/
    │   └── index.js     # Point d'entrée du serveur
    └── package.json     # Dépendances du serveur

```

## 🎮 Fonctionnalités

### Système de Combat
- Formation tactique en grille 2x3
- Commandants avec barre de vie
- Compagnons avec traits et effets uniques
- Système de cooldown pour les capacités

### Traits et Effets
Les compagnons peuvent avoir différents traits :
- `Hacker`
- `Fighter`
- `Monk`
- `Healer`
- `Upgraded`
- `Technophile`

## 🚀 Technologies

- **Frontend**
  - React 18
  - TypeScript
  - Tailwind CSS
  - Zustand (Gestion d'état)

- **Backend**
  - Node.js
  - Express
  - Socket.IO

## 🛠️ Installation

1. **Cloner le repository**
```bash
git clone <url-du-repo>
cd auto-battler
```

2. **Installation des dépendances**
```bash
# Installation des dépendances du client
cd client
npm install

# Installation des dépendances du serveur
cd ../server
npm install
```

3. **Configuration**
```bash
# Dans le dossier client
cp .env.example .env
```

4. **Lancer l'application**
```bash
# Dans le dossier racine
npm run dev  # Lance le client et le serveur
# OU
npm run client  # Lance uniquement le client
npm run server  # Lance uniquement le serveur
```

## 📝 Scripts disponibles

Dans le dossier racine :
- `npm run dev` : Lance le client et le serveur en mode développement
- `npm run build` : Compile le client et le serveur
- `npm run test` : Lance les tests

## 🎯 Gameplay

1. **Préparation**
   - Choisissez votre commandant
   - Formez votre équipe (jusqu'à 6 compagnons)
   - Placez vos compagnons stratégiquement

2. **Combat**
   - Les compagnons attaquent automatiquement
   - Gérez les cooldowns
   - Utilisez les synergies entre les traits

## 🗺️ Feuille de route

- [x] Système de formation
- [x] Gestion des commandants
- [x] Système de compagnons
- [ ] Multijoueur temps réel
- [ ] Système de matchmaking
- [ ] Interface de sélection des compagnons
- [ ] Animations des effets
- [ ] Sauvegarde de progression

## 🤝 Contribution

Les contributions sont les bienvenues ! Pour contribuer :

1. Fork le projet
2. Créez une branche (`git checkout -b feature/AmazingFeature`)
3. Committez vos changements (`git commit -m 'Add some AmazingFeature'`)
4. Push sur la branche (`git push origin feature/AmazingFeature`)
5. Ouvrez une Pull Request

## 📄 License

Distribué sous la licence MIT. Voir `LICENSE` pour plus d'informations.

## 📧 Contact

Votre Nom - [@votretwitter](https://twitter.com/votretwitter)

Lien du projet : [https://github.com/votrenom/auto-battler](https://github.com/votrenom/auto-battler) 